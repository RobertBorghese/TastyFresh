
contain system iostream;

autoptr bla: vector;
copy bla: vector;

fn main() -> int {
	std.cout << "Hello world" << std.endl;

	let test = new TestClass();
	test.printValue();

	test++;
	test++;
	test++;

	test.printValue();

	let test = fdsf#int;

	let test2 = static_cast@int(32f);

	return 0;
}

class Test_Class {
	forever let a: int;

	let b = new vector@int();

	ptr ghj: vector@int := 0;

	constructor(a: int) {
		this.a = a;
	}

	constructor(a: float) {
		this.a = a#int;
	}

	virtual destructor {
	}

	fn printValue() {
		std.cout << "The value of 'a' is: " << a << std.endl;
	}

	op ++() {
		a++;
	}
}
